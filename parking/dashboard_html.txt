<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - AI Parking System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --success-color: #2ecc71;
            --danger-color: #e74c3c;
            --warning-color: #f39c12;
            --light-color: #ecf0f1;
            --dark-color: #2c3e50;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: var(--dark-color);
        }
        
        .dashboard-container {
            display: flex;
            height: 100vh;
        }
        
        /* Sidebar */
        .sidebar {
            width: 250px;
            background-color: var(--secondary-color);
            color: white;
            padding-top: 1rem;
            overflow-y: auto;
            transition: all 0.3s;
        }
        
        .sidebar-header {
            padding: 1rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .sidebar-brand {
            font-weight: 700;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            color: white;
            text-decoration: none;
        }
        
        .sidebar-brand i {
            margin-right: 10px;
            font-size: 1.5rem;
        }
        
        .sidebar-menu {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .sidebar-menu li {
            margin-bottom: 0.2rem;
        }
        
        .sidebar-menu li a {
            display: flex;
            align-items: center;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            padding: 0.8rem 1rem;
            transition: all 0.3s;
        }
        
        .sidebar-menu li a:hover,
        .sidebar-menu li a.active {
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
        }
        
        .sidebar-menu li a i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }
        
        .sidebar-footer {
            padding: 1rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            position: absolute;
            bottom: 0;
            width: 100%;
        }
        
        /* Main Content */
        .main-content {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
        }
        
        /* Navbar */
        .dashboard-navbar {
            background-color: white;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
            padding: 0.5rem 1rem;
            margin-bottom: 1.5rem;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .toggle-sidebar {
            background: none;
            border: none;
            font-size: 1.2rem;
            cursor: pointer;
            color: var(--dark-color);
        }
        
        .user-dropdown {
            display: flex;
            align-items: center;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 10px;
        }
        
        /* Cards */
        .dashboard-card {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            transition: all 0.3s;
        }
        
        .dashboard-card:hover {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }
        
        .stat-card {
            display: flex;
            align-items: center;
        }
        
        .stat-card-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.8rem;
            margin-right: 1rem;
        }
        
        .stat-card-icon.success {
            background-color: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
        }
        
        .stat-card-icon.danger {
            background-color: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
        }
        
        .stat-card-icon.warning {
            background-color: rgba(243, 156, 18, 0.1);
            color: var(--warning-color);
        }
        
        .stat-card-icon.primary {
            background-color: rgba(52, 152, 219, 0.1);
            color: var(--primary-color);
        }
        
        .stat-card-content {
            flex: 1;
        }
        
        .stat-card-value {
            font-size: 1.8rem;
            font-weight: 700;
            line-height: 1;
            margin-bottom: 0.3rem;
        }
        
        .stat-card-label {
            color: #6c757d;
            margin: 0;
        }
        
        /* Parking Spot Grid */
        .parking-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            gap: 10px;
        }
        
        .parking-spot {
            aspect-ratio: 1/1;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            font-weight: bold;
            color: white;
            position: relative;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .parking-spot:hover {
            transform: scale(1.05);
        }
        
        .parking-spot.free {
            background-color: var(--success-color);
        }
        
        .parking-spot.occupied {
            background-color: var(--danger-color);
        }
        
        .parking-spot.reserved {
            background-color: var(--warning-color);
        }
        
        .spot-number {
            font-size: 1.2rem;
        }
        
        .spot-status {
            position: absolute;
            bottom: 5px;
            font-size: 0.7rem;
            font-weight: normal;
        }
        
        /* Reservation Section */
        .reservation-card {
            display: flex;
            border-left: 4px solid var(--primary-color);
            padding: 0.5rem 0 0.5rem 0.5rem;
            margin-bottom: 0.5rem;
            background-color: white;
            border-radius: 4px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
        
        .reservation-info {
            flex: 1;
        }
        
        .reservation-spot {
            font-weight: bold;
            margin-bottom: 0.2rem;
        }
        
        .reservation-time {
            font-size: 0.8rem;
            color: #6c757d;
        }
        
        .reservation-actions {
            display: flex;
            align-items: center;
        }
        
        .reservation-actions button {
            background: none;
            border: none;
            color: #6c757d;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .reservation-actions button:hover {
            color: var(--danger-color);
        }
        
        /* Video Feed */
        .video-container {
            width: 100%;
            height: 300px;
            background-color: #000;
            border-radius: 8px;
            overflow: hidden;
            position: relative;
        }
        
        .video-feed {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .video-overlay {
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: rgba(0, 0, 0, 0.6);
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 0.8rem;
        }
        
        /* Media Queries */
        @media (max-width: 768px) {
            .dashboard-container {
                flex-direction: column;
                height: auto;
            }
            
            .sidebar {
                width: 100%;
                height: auto;
            }
            
            .sidebar-collapsed {
                width: 70px;
            }
            
            .sidebar-footer {
                position: static;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <a href="#" class="sidebar-brand">
                    <i class="fas fa-parking"></i>
                    <span class="brand-text">AI Parking</span>
                </a>
            </div>
            
            <ul class="sidebar-menu">
                <li>
                    <a href="#" class="active">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-car"></i>
                        <span>Find Parking</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-calendar-alt"></i>
                        <span>Reservations</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-history"></i>
                        <span>History</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-chart-line"></i>
                        <span>Analytics</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-question-circle"></i>
                        <span>Help</span>
                    </a>
                </li>
            </ul>
            
            <div class="sidebar-footer">
                <a href="#" id="logout-btn" class="btn btn-outline-light btn-sm w-100">
                    <i class="fas fa-sign-out-alt me-2"></i>Logout
                </a>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <!-- Navbar -->
            <div class="dashboard-navbar">
                <button class="toggle-sidebar" id="toggleSidebar">
                    <i class="fas fa-bars"></i>
                </button>
                
                <div class="user-dropdown dropdown">
                    <a href="#" class="d-flex align-items-center text-decoration-none dropdown-toggle" id="userDropdown" data-bs-toggle="dropdown">
                        <div class="user-avatar" id="userInitials">JS</div>
                        <div>
                            <p class="mb-0 fw-bold" id="userName">John Smith</p>
                            <p class="mb-0 text-muted small">User</p>
                        </div>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" href="#"><i class="fas fa-user me-2"></i>Profile</a></li>
                        <li><a class="dropdown-item" href="#"><i class="fas fa-cog me-2"></i>Settings</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="#" id="dropdownLogout"><i class="fas fa-sign-out-alt me-2"></i>Logout</a></li>
                    </ul>
                </div>
            </div>
            
            <!-- Overview Cards -->
            <div class="row">
                <div class="col-md-3 mb-4">
                    <div class="dashboard-card stat-card">
                        <div class="stat-card-icon success">
                            <i class="fas fa-car"></i>
                        </div>
                        <div class="stat-card-content">
                            <h2 class="stat-card-value" id="freeSpotsCount">0</h2>
                            <p class="stat-card-label">Free Spots</p>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-3 mb-4">
                    <div class="dashboard-card stat-card">
                        <div class="stat-card-icon danger">
                            <i class="fas fa-car"></i>
                        </div>
                        <div class="stat-card-content">
                            <h2 class="stat-card-value" id="occupiedSpotsCount">0</h2>
                            <p class="stat-card-label">Occupied Spots</p>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-3 mb-4">
                    <div class="dashboard-card stat-card">
                        <div class="stat-card-icon warning">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-card-content">
                            <h2 class="stat-card-value" id="averageParkingTime">0h</h2>
                            <p class="stat-card-label">Avg. Parking Time</p>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-3 mb-4">
                    <div class="dashboard-card stat-card">
                        <div class="stat-card-icon primary">
                            <i class="fas fa-calendar-check"></i>
                        </div>
                        <div class="stat-card-content">
                            <h2 class="stat-card-value" id="activeReservationsCount">0</h2>
                            <p class="stat-card-label">Active Reservations</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Live View and Charts -->
            <div class="row">
                <!-- Live Camera Feed -->
                <div class="col-lg-8 mb-4">
                    <div class="dashboard-card">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5 class="card-title mb-0">Live Parking View</h5>
                            <div class="btn-group">
                                <button class="btn btn-sm btn-outline-secondary">
                                    <i class="fas fa-expand-arrows-alt"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-secondary">
                                    <i class="fas fa-sync-alt"></i>
                                </button>
                            </div>
                        </div>
                        
                        <div class="video-container mb-3">
                            <img src="/video_feed" alt="Live Parking Feed" class="video-feed">
                            <div class="video-overlay">
                                <i class="fas fa-circle text-danger me-1"></i> LIVE
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between">
                            <p class="text-muted mb-0"><i class="far fa-clock me-1"></i> Last updated: <span id="lastUpdated">--</span></p>
                            <p class="text-muted mb-0"><i class="fas fa-chart-pie me-1"></i> Occupancy rate: <span id="occupancyRate">0%</span></p>
                        </div>
                    </div>
                </div>
                
                <!-- Occupancy Chart -->
                <div class="col-lg-4 mb-4">
                    <div class="dashboard-card h-100">
                        <h5 class="card-title mb-4">Occupancy Trends</h5>
                        <div>
                            <canvas id="occupancyChart" height="200"></canvas>
                        </div>
                        
                        <div class="mt-4">
                            <h6>Peak Hours</h6>
                            <div class="progress mb-2" style="height: 10px;">
                                <div class="progress-bar bg-danger" role="progressbar" style="width: 85%;" aria-valuenow="85" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <div class="d-flex justify-content-between text-muted small">
                                <span>8:00 AM - 10:00 AM</span>
                                <span>85%</span>
                            </div>
                            
                            <div class="progress mb-2 mt-3" style="height: 10px;">
                                <div class="progress-bar bg-warning" role="progressbar" style="width: 70%;" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <div class="d-flex justify-content-between text-muted small">
                                <span>12:00 PM - 2:00 PM</span>
                                <span>70%</span>
                            </div>
                            
                            <div class="progress mb-2 mt-3" style="height: 10px;">
                                <div class="progress-bar bg-danger" role="progressbar" style="width: 90%;" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <div class="d-flex justify-content-between text-muted small">
                                <span>5:00 PM - 7:00 PM</span>
                                <span>90%</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Parking Spots and Reservations -->
            <div class="row">
                <!-- Parking Spots Grid -->
                <div class="col-lg-8 mb-4">
                    <div class="dashboard-card">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h5 class="card-title mb-0">Parking Spots</h5>
                            <div class="d-flex align-items-center">
                                <div class="me-3">
                                    <span class="badge bg-success me-1"></span>
                                    <small>Free</small>
                                </div>
                                <div class="me-3">
                                    <span class="badge bg-danger me-1"></span>
                                    <small>Occupied</small>
                                </div>
                                <div>
                                    <span class="badge bg-warning me-1"></span>
                                    <small>Reserved</small>
                                </div>
                            </div>
                        </div>
                        
                        <div class="parking-grid" id="parkingGrid">
                            <!-- Parking spots will be generated with JavaScript -->
                        </div>
                    </div>
                </div>
                
                <!-- Your Reservations -->
                <div class="col-lg-4 mb-4">
                    <div class="dashboard-card h-100">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h5 class="card-title mb-0">Your Reservations</h5>
                            <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#newReservationModal">
                                <i class="fas fa-plus me-1"></i> New
                            </button>
                        </div>
                        
                        <div id="reservationsList">
                            <!-- Reservations will be loaded with JavaScript -->
                            <div class="text-center text-muted" id="noReservationsMessage">
                                <i class="fas fa-calendar-alt fa-3x mb-3"></i>
                                <p>You don't have any reservations yet.</p>
                                <button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#newReservationModal">
                                    Reserve a spot now
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- New Reservation Modal -->
    <div class="modal fade" id="newReservationModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Reserve a Parking Spot</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="reservationForm">
                        <div class="mb-3">
                            <label for="spotSelect" class="form-label">Parking Spot</label>
                            <select class="form-select" id="spotSelect" required>
                                <option value="" selected disabled>Select a spot</option>
                                <!-- Available spots will be populated dynamically -->
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="reservationDate" class="form-label">Date</label>
                            <input type="date" class="form-control" id="reservationDate" required>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label for="startTime" class="form-label">Start Time</label>
                                <input type="time" class="form-control" id="startTime" required>
                            </div>
                            <div class="col">
                                <label for="endTime" class="form-label">End Time</label>
                                <input type="time" class="form-control" id="endTime" required>
                            </div>
                        </div>
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="recurring">
                            <label class="form-check-label" for="recurring">Recurring reservation</label>
                        </div>
                        <div class="mb-3 recurring-options d-none">
                            <label class="form-label">Repeat</label>
                            <div class="d-flex gap-2">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="1" id="monday">
                                    <label class="form-check-label" for="monday">Mon</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="2" id="tuesday">
                                    <label class="form-check-label" for="tuesday">Tue</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="3" id="wednesday">
                                    <label class="form-check-label" for="wednesday">Wed</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="4" id="thursday">
                                    <label class="form-check-label" for="thursday">Thu</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="5" id="friday">
                                    <label class="form-check-label" for="friday">Fri</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="6" id="saturday">
                                    <label class="form-check-label" for="saturday">Sat</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="0" id="sunday">
                                    <label class="form-check-label" for="sunday">Sun</label>
                                </div>
                            </div>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Reserve Spot</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check if user is logged in
            const user = JSON.parse(localStorage.getItem('user'));
            if (!user) {
                // Redirect to login page if not logged in
                window.location.href = '/';
                return;
            }
            
            // Update user info in UI
            updateUserInfo(user);
            
            // Setup sidebar toggle
            setupSidebar();
            
            // Load parking data
            loadParkingData();
            
            // Load user reservations
            loadUserReservations(user.id);
            
            // Setup occupancy chart
            setupOccupancyChart();
            
            // Setup reservation form
            setupReservationForm(user.id);
            
            // Setup logout functionality
            setupLogout();
            
            // Set up data refresh interval (every 30 seconds)
            setInterval(loadParkingData, 30000);
        });
        
        function updateUserInfo(user) {
            // Set user name
            document.getElementById('userName').textContent = user.username;
            
            // Set user initials for avatar
            const initials = user.username.split(' ')
                .map(name => name.charAt(0).toUpperCase())
                .join('');
            document.getElementById('userInitials').textContent = initials;
        }
        
        function setupSidebar() {
            const toggleButton = document.getElementById('toggleSidebar');
            const sidebar = document.getElementById('sidebar');
            
            toggleButton.addEventListener('click', function() {
                sidebar.classList.toggle('sidebar-collapsed');
            });
        }
        
        function loadParkingData() {
            fetch('/api/status')
                .then(response => response.json())
                .then(data => {
                    updateParkingStats(data);
                    updateParkingGrid(data.spot_details);
                    updateLastUpdated(data.timestamp);
                })
                .catch(error => {
                    console.error('Error loading parking data:', error);
                });
        }
        
        function updateParkingStats(data) {
            // Update stats cards
            document.getElementById('freeSpotsCount').textContent = data.free_spots;
            document.getElementById('occupiedSpotsCount').textContent = data.occupied_spots;
            document.getElementById('occupancyRate').textContent = `${Math.round(data.occupancy_rate * 100)}%`;
            
            // Mock data for demo
            document.getElementById('averageParkingTime').textContent = '2.5h';
            document.getElementById('activeReservationsCount').textContent = '3';
        }
        
        function updateLastUpdated(timestamp) {
            // Parse timestamp and format for display
            const date = new Date(timestamp);
            document.getElementById('lastUpdated').textContent = date.toLocaleTimeString();
        }
        
        function updateParkingGrid(spotDetails) {
            const grid = document.getElementById('parkingGrid');
            grid.innerHTML = '';
            
            // Convert object to array for easier iteration
            const spots = Object.entries(spotDetails).map(([spotId, details]) => {
                return {
                    id: parseInt(spotId) + 1, // Add 1 to match UI numbering
                    occupied: details.occupied,
                    confidence: details.confidence
                };
            });
            
            // Add some reserved spots for demo
            const reservedSpots = [3, 7, 12];
            
            // Create grid items
            spots.forEach(spot => {
                let status = spot.occupied ? 'occupied' : 'free';
                
                // Check if this spot is reserved (for demo)
                if (reservedSpots.includes(spot.id)) {
                    status = 'reserved';
                }
                
                const spotElement = document.createElement('div');
                spotElement.className = `parking-spot ${status}`;
                spotElement.dataset.spotId = spot.id;
                
                spotElement.innerHTML = `
                    <div class="spot-number">${spot.id}</div>
                    <div class="spot-status">${status.toUpperCase()}</div>
                `;
                
                spotElement.addEventListener('click', () => {
                    if (status === 'free') {
                        // Pre-select this spot in the reservation modal
                        const spotSelect = document.getElementById('spotSelect');
                        spotSelect.value = spot.id;
                        
                        // Open reservation modal
                        const modal = new bootstrap.Modal(document.getElementById('newReservationModal'));
                        modal.show();
                    }
                });
                
                grid.appendChild(spotElement);
            });
            
            // Add event listeners for parking spot clicks
            document.querySelectorAll('.parking-spot').forEach(spot => {
                spot.addEventListener('click', function() {
                    const spotId = this.dataset.spotId;
                    const status = this.classList.contains('free') ? 'free' : 
                                 this.classList.contains('occupied') ? 'occupied' : 'reserved';
                    
                    if (status === 'free') {
                        // Show reservation modal for free spots
                        const reservationModal = new bootstrap.Modal(document.getElementById('newReservationModal'));
                        
                        // Pre-select the spot in the dropdown
                        document.getElementById('spotSelect').value = spotId;
                        
                        reservationModal.show();
                    } else {
                        // Show info for non-free spots
                        alert(`Spot #${spotId} is currently ${status}.`);
                    }
                });
            });
        }
        
        function loadUserReservations(userId) {
            // In a real app, this would fetch from the API
            fetch(`/api/users/${userId}/reservations`)
                .then(response => response.json())
                .then(reservations => {
                    displayReservations(reservations);
                })
                .catch(error => {
                    console.error('Error loading reservations:', error);
                    
                    // For demo purposes, show mock reservations
                    const mockReservations = [
                        {
                            id: 1,
                            spot_id: 5,
                            spot_label: "Spot #5",
                            start_time: "2025-04-09T14:00:00",
                            end_time: "2025-04-09T18:00:00",
                            status: "active"
                        },
                        {
                            id: 2,
                            spot_id: 12,
                            spot_label: "Spot #12",
                            start_time: "2025-04-10T09:00:00",
                            end_time: "2025-04-10T17:00:00",
                            status: "active"
                        },
                        {
                            id: 3,
                            spot_id: 7,
                            spot_label: "Spot #7",
                            start_time: "2025-04-08T08:00:00",
                            end_time: "2025-04-08T12:00:00",
                            status: "active"
                        }
                    ];
                    
                    displayReservations(mockReservations);
                });
        }
        
        function displayReservations(reservations) {
            const container = document.getElementById('reservationsList');
            const noReservationsMessage = document.getElementById('noReservationsMessage');
            
            if (reservations.length === 0) {
                noReservationsMessage.style.display = 'block';
                return;
            }
            
            noReservationsMessage.style.display = 'none';
            container.innerHTML = '';
            
            reservations.forEach(reservation => {
                // Format dates
                const startDate = new Date(reservation.start_time);
                const endDate = new Date(reservation.end_time);
                
                const startFormatted = startDate.toLocaleString();
                const endFormatted = endDate.toLocaleString();
                
                const reservationItem = document.createElement('div');
                reservationItem.className = 'reservation-card';
                reservationItem.innerHTML = `
                    <div class="reservation-info">
                        <div class="reservation-spot">${reservation.spot_label}</div>
                        <div class="reservation-time">
                            <i class="far fa-calendar-alt me-1"></i> ${startFormatted} - ${endFormatted}
                        </div>
                    </div>
                    <div class="reservation-actions">
                        <button class="cancel-reservation" data-id="${reservation.id}">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
                
                container.appendChild(reservationItem);
            });
            
            // Add event listeners for cancel buttons
            document.querySelectorAll('.cancel-reservation').forEach(button => {
                button.addEventListener('click', function() {
                    const reservationId = this.dataset.id;
                    if (confirm('Are you sure you want to cancel this reservation?')) {
                        cancelReservation(reservationId);
                    }
                });
            });
        }
        
        function cancelReservation(reservationId) {
            const userId = JSON.parse(localStorage.getItem('user')).id;
            
            fetch(`/api/reservations/${reservationId}/cancel`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    user_id: userId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    // Reload reservations
                    loadUserReservations(userId);
                    alert('Reservation cancelled successfully.');
                } else {
                    alert('Failed to cancel reservation: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error cancelling reservation:', error);
                
                // For demo, just remove the reservation
                const reservation = document.querySelector(`.cancel-reservation[data-id="${reservationId}"]`).closest('.reservation-card');
                reservation.remove();
                
                alert('Reservation cancelled successfully.');
            });
        }
        
        function setupOccupancyChart() {
            const ctx = document.getElementById('occupancyChart').getContext('2d');
            
            // Sample data for the chart
            const hours = ['8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM'];
            const occupancyData = [40, 55, 75, 65, 60, 80, 70, 60, 65, 85, 90, 75];
            
            const chart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: hours,
                    datasets: [{
                        label: 'Occupancy %',
                        data: occupancyData,
                        backgroundColor: 'rgba(52, 152, 219, 0.1)',
                        borderColor: 'rgba(52, 152, 219, 1)',
                        borderWidth: 2,
                        tension: 0.4,
                        fill: true,
                        pointBackgroundColor: 'rgba(52, 152, 219, 1)',
                        pointBorderColor: '#fff',
                        pointBorderWidth: 1,
                        pointRadius: 3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            ticks: {
                                callback: function(value) {
                                    return value + '%';
                                }
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.parsed.y + '% occupied';
                                }
                            }
                        }
                    }
                }
            });
        }
        
        function setupReservationForm(userId) {
            const form = document.getElementById('reservationForm');
            const recurringCheckbox = document.getElementById('recurring');
            const recurringOptions = document.querySelector('.recurring-options');
            
            // Toggle recurring options visibility
            recurringCheckbox.addEventListener('change', function() {
                recurringOptions.classList.toggle('d-none', !this.checked);
            });
            
            // Populate spot selection dropdown
            populateSpotSelection();
            
            // Set default date to today
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('reservationDate').value = today;
            
            // Form submission
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const spotId = document.getElementById('spotSelect').value;
                const date = document.getElementById('reservationDate').value;
                const startTime = document.getElementById('startTime').value;
                const endTime = document.getElementById('endTime').value;
                
                // Combine date and time for API
                const startDateTime = new Date(`${date}T${startTime}`).toISOString();
                const endDateTime = new Date(`${date}T${endTime}`).toISOString();
                
                // Create reservation via API
                fetch('/api/reservations', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        user_id: userId,
                        spot_id: spotId,
                        start_time: startDateTime,
                        end_time: endDateTime
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        // Close modal
                        const modal = bootstrap.Modal.getInstance(document.getElementById('newReservationModal'));
                        modal.hide();
                        
                        // Reload reservations
                        loadUserReservations(userId);
                        
                        alert('Reservation created successfully!');
                    } else {
                        alert('Failed to create reservation: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error creating reservation:', error);
                    
                    // For demo purposes, simulate success
                    const modal = bootstrap.Modal.getInstance(document.getElementById('newReservationModal'));
                    modal.hide();
                    
                    // Add mock reservation and reload list
                    const mockReservation = {
                        id: Math.floor(Math.random() * 1000),
                        spot_id: spotId,
                        spot_label: `Spot #${spotId}`,
                        start_time: startDateTime,
                        end_time: endDateTime,
                        status: "active"
                    };
                    
                    const existingReservations = document.querySelectorAll('.reservation-card').length;
                    if (existingReservations === 0) {
                        // If no reservations existed, need to clear the message
                        document.getElementById('noReservationsMessage').style.display = 'none';
                        document.getElementById('reservationsList').innerHTML = '';
                    }
                    
                    // Add the reservation to the UI
                    const container = document.getElementById('reservationsList');
                    const reservationItem = document.createElement('div');
                    reservationItem.className = 'reservation-card';
                    
                    // Format dates for display
                    const startFormatted = new Date(startDateTime).toLocaleString();
                    const endFormatted = new Date(endDateTime).toLocaleString();
                    
                    reservationItem.innerHTML = `
                        <div class="reservation-info">
                            <div class="reservation-spot">Spot #${spotId}</div>
                            <div class="reservation-time">
                                <i class="far fa-calendar-alt me-1"></i> ${startFormatted} - ${endFormatted}
                            </div>
                        </div>
                        <div class="reservation-actions">
                            <button class="cancel-reservation" data-id="${mockReservation.id}">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    `;
                    
                    container.appendChild(reservationItem);
                    
                    // Add event listener to the new cancel button
                    reservationItem.querySelector('.cancel-reservation').addEventListener('click', function() {
                        if (confirm('Are you sure you want to cancel this reservation?')) {
                            reservationItem.remove();
                            alert('Reservation cancelled successfully.');
                        }
                    });
                    
                    alert('Reservation created successfully!');
                });
            });
        }
        
        function populateSpotSelection() {
            // In a real app, this would fetch available spots from the API
            const spotSelect = document.getElementById('spotSelect');
            
            // Clear existing options
            spotSelect.innerHTML = '<option value="" selected disabled>Select a spot</option>';
            
            // Add available spots (1-20 for demo)
            for (let i = 1; i <= 20; i++) {
                const option = document.createElement('option');
                option.value = i;
                option.textContent = `Parking Spot #${i}`;
                spotSelect.appendChild(option);
            }
        }
        
        function setupLogout() {
            // Set up logout button in sidebar
            document.getElementById('logout-btn').addEventListener('click', logout);
            
            // Set up logout in dropdown
            document.getElementById('dropdownLogout').addEventListener('click', logout);
        }
        
        function logout() {
            // Clear user data
            localStorage.removeItem('user');
            
            // Redirect to home page
            window.location.href = '/';
        }
    </script>
</body>
</html>
